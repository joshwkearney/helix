struct Point {
	x as word;
	y as Test;
}

struct Test {
	x as word;
}

func fib(x as word) as word {    
    return if x <= 1
        then x
        else fib(x - 1) + fib(x - 2);
}

func fib2(x as word) as word {
    if x <= 1 {
        return x;
    }
        
    return fib(x - 1) + fib(x - 2);
}


func test(limit as word) as word {
    var i = 0;

	while true {
	    if i < limit {
	        i += 1;  
	        continue;
	    }
	    
	    return if i < 5 then 0 else 8;
	}

	return i;
}

func comptime() as word {
    var x = 78;
    
    return x + 7;
}

func test2(z as &word) as word {
    var x = 45;
    
    if *z > 2 {
        var y = &x;
        //return x + 1;
    }
    
    return x + 2;
}

union Option {
    none as void;
    value as word;
}

func test(x as Option) as word {
    if x is none {
        return 0;
    }
    
    return x + 1;
}

func test() as word {
    var sum = 0;
    
    for i = 0 until 10 {
        sum += i;
    }
    
    return sum;
}
